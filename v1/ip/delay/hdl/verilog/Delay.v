// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Delay,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=5.947000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=76,HLS_SYN_LUT=464,HLS_VERSION=2018_3}" *)

module Delay (
        ap_clk,
        ap_rst,
        t1_s_V,
        t2_s_V,
        t3_s_V,
        t4_s_V,
        t1,
        t2,
        t3,
        t4,
        rv_V,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [47:0] t1_s_V;
input  [47:0] t2_s_V;
input  [47:0] t3_s_V;
input  [47:0] t4_s_V;
input  [31:0] t1;
input  [31:0] t2;
input  [31:0] t3;
input  [31:0] t4;
input  [11:0] rv_V;
output  [31:0] ap_return;

reg   [11:0] rv_V_read_reg_261;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] tmp_V_fu_138_p2;
reg   [31:0] tmp_V_reg_266;
wire   [31:0] p_Val2_1_fu_166_p2;
reg   [31:0] p_Val2_1_reg_271;
wire    ap_block_pp0_stage0;
wire   [47:0] t4_s_V_assign_fu_116_p2;
wire  signed [31:0] tmp_fu_122_p1;
wire   [31:0] t4_assign_fu_132_p2;
wire   [31:0] tmp_2_fu_126_p2;
wire   [47:0] tmp_4_fu_144_p2;
wire  signed [31:0] tmp_1_fu_150_p1;
wire   [31:0] t3_assign_fu_160_p2;
wire   [31:0] tmp_6_fu_154_p2;
wire   [31:0] r_V_2_fu_178_p0;
wire   [11:0] r_V_2_fu_178_p1;
wire   [43:0] r_V_2_fu_178_p2;
wire   [39:0] rhs_V_fu_188_p3;
wire   [44:0] lhs_V_fu_184_p1;
wire   [44:0] rhs_V_1_cast_fu_195_p1;
wire   [44:0] ret_V_fu_199_p2;
wire   [7:0] p_Result_2_fu_213_p4;
wire   [31:0] tmp_3_fu_229_p4;
wire   [0:0] tmp_s_fu_223_p2;
wire   [31:0] tmp_8_fu_239_p2;
wire   [0:0] p_Result_s_fu_205_p3;
wire   [31:0] tmp_5_fu_245_p3;
wire   [43:0] r_V_2_fu_178_p00;
wire   [43:0] r_V_2_fu_178_p10;

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        p_Val2_1_reg_271 <= p_Val2_1_fu_166_p2;
        rv_V_read_reg_261 <= rv_V;
        tmp_V_reg_266 <= tmp_V_fu_138_p2;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_return = ((p_Result_s_fu_205_p3[0:0] === 1'b1) ? tmp_5_fu_245_p3 : tmp_3_fu_229_p4);

assign lhs_V_fu_184_p1 = r_V_2_fu_178_p2;

assign p_Result_2_fu_213_p4 = {{ret_V_fu_199_p2[8:1]}};

assign p_Result_s_fu_205_p3 = ret_V_fu_199_p2[32'd44];

assign p_Val2_1_fu_166_p2 = (t3_assign_fu_160_p2 + tmp_6_fu_154_p2);

assign r_V_2_fu_178_p0 = r_V_2_fu_178_p00;

assign r_V_2_fu_178_p00 = tmp_V_reg_266;

assign r_V_2_fu_178_p1 = r_V_2_fu_178_p10;

assign r_V_2_fu_178_p10 = rv_V_read_reg_261;

assign r_V_2_fu_178_p2 = (r_V_2_fu_178_p0 * r_V_2_fu_178_p1);

assign ret_V_fu_199_p2 = (lhs_V_fu_184_p1 - rhs_V_1_cast_fu_195_p1);

assign rhs_V_1_cast_fu_195_p1 = rhs_V_fu_188_p3;

assign rhs_V_fu_188_p3 = {{p_Val2_1_reg_271}, {8'd0}};

assign t3_assign_fu_160_p2 = (t3 - t2);

assign t4_assign_fu_132_p2 = (t4 - t1);

assign t4_s_V_assign_fu_116_p2 = (t4_s_V - t1_s_V);

assign tmp_1_fu_150_p1 = tmp_4_fu_144_p2[31:0];

assign tmp_2_fu_126_p2 = ($signed({{1'b0}, {32'd1000000000}}) * $signed(tmp_fu_122_p1));

assign tmp_3_fu_229_p4 = {{ret_V_fu_199_p2[40:9]}};

assign tmp_4_fu_144_p2 = (t3_s_V - t2_s_V);

assign tmp_5_fu_245_p3 = ((tmp_s_fu_223_p2[0:0] === 1'b1) ? tmp_3_fu_229_p4 : tmp_8_fu_239_p2);

assign tmp_6_fu_154_p2 = ($signed({{1'b0}, {32'd1000000000}}) * $signed(tmp_1_fu_150_p1));

assign tmp_8_fu_239_p2 = (32'd1 + tmp_3_fu_229_p4);

assign tmp_V_fu_138_p2 = (t4_assign_fu_132_p2 + tmp_2_fu_126_p2);

assign tmp_fu_122_p1 = t4_s_V_assign_fu_116_p2[31:0];

assign tmp_s_fu_223_p2 = ((p_Result_2_fu_213_p4 == 8'd0) ? 1'b1 : 1'b0);

endmodule //Delay
